syntax = "proto3";

option go_package = ".";

service DataLayer {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
    rpc ReadUser (ReadUserRequest) returns (ReadUserResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);

    rpc CreateTask (CreateTaskRequest) returns (CreateTaskResponse);
    rpc ReadTask (ReadTaskRequest) returns (ReadTaskResponse);
    rpc ReadMultipleTasks (ReadMultipleTasksRequest) returns (ReadMultipleTasksResponse);
    rpc UpdateTask (UpdateTaskRequest) returns (UpdateTaskResponse);
    rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse);
}

message UserDTO {
    optional string user_id = 1;
    string username = 2;
    string password = 3;
}

message TaskDTO {
    string task_id = 1;
    string title = 2;
    string details = 3;
    bool is_done = 4;
}

enum DataStatus {
    Data_Internal_Error = 0;
    Data_Invalid_Username = 1;
    Data_Invalid_Password = 2;
    Data_No_User_Found = 3;
    Data_No_Task_Found = 4;
    Data_Success = 5;
    Data_Database_Error = 6;
}

message CreateUserRequest {
    string username = 1;
    string password = 2;
}

message CreateUserResponse {
    DataStatus status = 1;
    optional UserDTO user = 2;
}

message ReadUserRequest {
    string username = 1;
}

message ReadUserResponse {
    DataStatus status = 1;
    optional UserDTO user = 2;
}

message UpdateUserRequest {
    UserDTO user = 1;
}

message UpdateUserResponse {
    DataStatus status = 1;
    optional UserDTO user = 2;
}

message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    DataStatus status = 1;
}

message CreateTaskRequest {
    string user_id = 1;
    TaskDTO task = 2;
}

message CreateTaskResponse {
    DataStatus status = 1;
    optional TaskDTO task = 2;
}

message ReadTaskRequest {
    string user_id = 1;
    string task_id = 2;
}

message ReadTaskResponse {
    DataStatus status = 1;
    optional TaskDTO task = 2;
}

message ReadMultipleTasksRequest {
    string user_id = 1;
    int32 page = 2;
    int32 limit = 3;
}

message ReadMultipleTasksResponse {
    DataStatus status = 1;
    repeated TaskDTO tasks = 2;
}

message UpdateTaskRequest {
    string user_id = 1;
    TaskDTO task = 2;
}

message UpdateTaskResponse {
    DataStatus status = 1;
    optional TaskDTO task = 2;
}

message DeleteTaskRequest {
    string user_id = 1;
    string task_id = 2;
}


message DeleteTaskResponse {
    DataStatus status = 1;
}
