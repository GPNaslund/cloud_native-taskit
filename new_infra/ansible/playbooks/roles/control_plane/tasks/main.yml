---

- name: Install required packages
  apt:
    name: ["snapd", "iptables"]
    state: present
    update_cache: yes

- name: Install MicroK8s
  snap:
    name: microk8s
    classic: true
    state: present

# - name: Add current user to the MicroK8s group
#   user:
#     name: "{{ ansible_user }}"
#     groups: microk8s
#     append: yes

# - name: Ensure ~/.kube directory exists
#   file:
#     path: "~/.kube"
#     state: directory
#     mode: 0700

- name: Wait for MicroK8s to be ready
  shell: microk8s status --wait-ready

- name: Enable MicroK8s addons
  shell: |
    microk8s enable dns storage kube-ovn --force

- name: Wait for MicroK8s to be ready on the first control plane
  when: inventory_hostname == groups['control_plane'][0]
  shell: microk8s status --wait-ready

- name: Initialize the first control plane
  when: inventory_hostname == groups['control_plane'][0]
  shell: microk8s add-node --token-ttl 3600
  register: add_node_output

- name: Extract join command for control planes
  when: inventory_hostname == groups['control_plane'][0]
  set_fact:
    control_plane_join_command: "{{ add_node_output.stdout_lines | select('search', 'microk8s join') | first }}"

- name: Wait for the first control plane to initialize
  when: inventory_hostname != groups['control_plane'][0]
  wait_for:
    host: "{{ hostvars[groups['control_plane'][0]].ansible_host }}"
    port: 25000
    timeout: 600

- name: Join remaining control planes to the cluster
  when: inventory_hostname != groups['control_plane'][0]
  shell: "{{ hostvars[groups['control_plane'][0]].control_plane_join_command }}"
